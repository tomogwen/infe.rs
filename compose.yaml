services:
  inference:
    build:
      context: inference/
      target: final
    ports:
      - 8001:8001
    environment:
      - PG_DBNAME=queue
      - PG_HOST=db
      - PG_USER=postgres
      - PG_PASSWORD=RandomPassword123
      - RUST_LOG=debug
    depends_on:
      queuer:
        condition: service_started
  queuer:
    build:
      context: queuer/
      target: final
    ports:
      - 8000:8000
    environment:
      - PG_DBNAME=queue
      - PG_HOST=db
      - PG_USER=postgres
      - PG_PASSWORD=RandomPassword123
      - RUST_LOG=debug
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=queue
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: configs/dbpassword.txt
